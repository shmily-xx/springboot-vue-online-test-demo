<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.exam.mapper.MessageMapper">
    <resultMap type="com.exam.entity.Message" id="MessageMap">
        <id property="id" column="id"/>
        <result property="temp_id" column="temp_id"/>
        <result property="title" column="title"/>
        <result property="time" column="time"/>
        <collection property="replays" ofType="com.exam.entity.Replay">
            <id property="messageId" column="messageId"/>
            <result property="replayId" column="replayId"/>
            <result property="replay" column="replay"/>
            <result property="replayTime" column="replayTime"/>
        </collection>
    </resultMap>

    <!-- @Select("select id,id as temp_id,title,content,time from message order by id desc")
        @Results({
                @Result(property = "replays", column = "temp_id",many = @Many(select = "com.exam.mapper.ReplayMapper.findAllById"))
        })
     -->
    <select id="findAll" resultMap="MessageMap">
        select id, id as temp_id, title, content, time
        from message m
                 left join replay r on r.messageId = m.id
        order by id desc
    </select>

    <!-- @Select("select id,title,content,time from message where id = #{id}")
        @Results({
                @Result(property = "replays", column = "id",many = @Many(select = "com.exam.mapper.ReplayMapper.findAllById"))
        })
     -->
    <select id="findById" resultMap="MessageMap">
        select id, title, content, time
        from message m
                 left join replay r on r.messageId = m.id
        where id = #{id}
    </select>

    <delete id="delete">
        delete
        from message
        where id = #{id}
    </delete>

    <update id="update">
        update message
        set title   = #{title},
            content = #{content},
            time    = #{time}
        where id = #{id}
    </update>

    <insert id="add" useGeneratedKeys="true" keyProperty="id">
        insert into message(title, content, time)
        values (#{title}, #{content}, #{time})
    </insert>
</mapper>